package com.cp.project.demo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.cp.project.demo.model.forRoom.Room;
import com.cp.project.demo.service.WebClientRoomService;

import reactor.core.publisher.Mono;

@Controller
@RequestMapping("/web")
public class RoomController {
	@Autowired
	WebClientRoomService roomService;
	
	public RoomController(WebClientRoomService roomService) {
		this.roomService = roomService;
	}
	
	@GetMapping("/view/room")
	public String viewAllRoom(Model model) {
		List<Room> room = roomService.getAllRoom().collectList().block();
		if(room == null) {
	        model.addAttribute("rooms", new ArrayList<>());
		} else {
	        model.addAttribute("rooms", room);
	    }
	 	return "viewroom";
	}

	
    @GetMapping("/view/addroom")
    public String getAddRoomForm(Model model) {
        model.addAttribute("room", new Room());
        return "addroom";
    }
    
    @PostMapping("/add/room")
    public Mono<String> addRoom(@ModelAttribute Room room, Model model) {
        return roomService.addRoom(room)
            .map(createdRoom -> {
                model.addAttribute("room", createdRoom);
                return "redirect:/web/view/room"; // Redirect to room list after successful addition
            })
            .onErrorResume(error -> {
                return Mono.just("redirect:/web/view/addroom?error=" + error.getMessage());
            });
    }
    
    @GetMapping("/edit/room")
    public String getEditRoomForm(@PathVariable Integer roomId, Model model) {
        Room room = roomService.getRoomById(roomId).block(); // หรือใช้การเรียกแบบ Reactive
        model.addAttribute("room", room);
        return "editRoomForm"; 
    }

    @PostMapping("/update/room/price")
    public Mono<String> updateRoomPrice(@RequestParam Integer roomId, @RequestParam Double newPrice) {
        // รหัสเพื่ออัปเดตราคาห้อง
        return roomService.updateRoomPriceByType(roomId, newPrice)
            .then(Mono.just("redirect:/web/view/room"));
    }



}
