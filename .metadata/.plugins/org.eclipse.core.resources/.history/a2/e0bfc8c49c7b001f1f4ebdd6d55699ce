package com.cp.project.demo.service;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cp.project.demo.model.forBooking.Booking;
import com.cp.project.demo.model.forBooking.ConcreteBookingBuilder;
import com.cp.project.demo.model.forRoom.Room;
import com.cp.project.demo.model.forUser.User;
import com.cp.project.demo.repository.BookingRepository;
import com.cp.project.demo.repository.RoomRepository;
import com.cp.project.demo.repository.UserRepository;

@Service
public class BookingService {
	@Autowired
	private BookingRepository bookingRepo;

	public List<Booking> getAllBooking() {
		return (List<Booking>) bookingRepo.findAll();
	}

	public Booking getBookingById(Integer id) {
		return bookingRepo.findById(id).orElseThrow(() -> new RuntimeException("error bro id not found!!!"));
	}

	public Booking createBooking(Room room, User user, String paymentType, Date checkinDate, Date checkoutDate) {
		if (room.getRoomStatus().equals("Available")) {
			ConcreteBookingBuilder builder = new ConcreteBookingBuilder();
			Booking booking = null;
			long differenceInMillies = checkoutDate.getTime() - checkinDate.getTime();
			Double differenceInDays = (double) differenceInMillies / (1000 * 60 * 60 * 24);
			Double totalPrice = room.getRoomPrice() * differenceInDays;
			if (paymentType.equals("Cash")) {
				booking = builder.setRoom(room).setUser(user).setPaymentType(paymentType).setBookingDate(new Date())
						.setCheckinDate(checkinDate).setCheckoutDate(checkoutDate).setStatus("Waiting pay")
						.setTotalPrice(totalPrice).build();
			} else if (paymentType.equals("CreditCard")) {
				booking = builder.setRoom(room).setUser(user).setPaymentType(paymentType).setBookingDate(new Date())
						.setCheckinDate(checkinDate).setCheckoutDate(checkoutDate).setStatus("payed")
						.setTotalPrice(totalPrice).build();
			}
			room.setRoomStatus("Unavailable");
			return bookingRepo.save(booking);
		}

		return null;
	}

}
