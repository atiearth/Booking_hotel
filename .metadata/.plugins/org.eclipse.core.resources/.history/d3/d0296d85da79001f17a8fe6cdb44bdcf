// ดึงข้อมูลจาก API และแสดงใน Dashboard
fetch('/api/income')
  .then(response => {
      if (!response.ok) throw new Error('Network response was not ok');
      return response.json();
  })
  .then(data => {
      document.querySelector('.total-income').innerHTML = data + ' บาท';
  })
  .catch(error => console.error('Error fetching income:', error));

fetch('/api/available-rooms')
  .then(response => {
      if (!response.ok) throw new Error('Network response was not ok');
      return response.json();
  })
  .then(data => {
      document.querySelector('.available-rooms').innerHTML = data.length + ' ห้อง'; // นับจำนวนห้องว่าง
  })
  .catch(error => console.error('Error fetching available rooms:', error));

fetch('/api/booked_rooms')
  .then(response => {
      if (!response.ok) throw new Error('Network response was not ok');
      return response.json();
  })
  .then(data => {
      document.querySelector('.booked-rooms').innerHTML = data + ' ห้อง'; // ตรวจสอบให้แน่ใจว่าข้อมูลนี้ถูกต้อง
  })
  .catch(error => console.error('Error fetching booked rooms:', error));

// กราฟแสดงสถานะห้องพัก
fetch('/api/room-status')
  .then(response => {
      if (!response.ok) throw new Error('Network response was not ok');
      return response.json();
  })
  .then(data => {
      const ctx = document.getElementById('roomChart').getContext('2d');
      const roomChart = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: ['Checked In', 'Booked', 'Available'],
              datasets: [{
                  label: 'Number of Rooms',
                  data: [data.checkedIn, data.booked, data.available],  // ตรวจสอบค่าที่ดึงมาจาก API
                  backgroundColor: [
                      'rgba(75, 192, 192, 0.2)',
                      'rgba(255, 159, 64, 0.2)',
                      'rgba(153, 102, 255, 0.2)'
                  ],
                  borderColor: [
                      'rgba(75, 192, 192, 1)',
                      'rgba(255, 159, 64, 1)',
                      'rgba(153, 102, 255, 1)'
                  ],
                  borderWidth: 1,
                  barThickness: 80
              }]
          },
          options: {
              scales: {
                  y: {
                      beginAtZero: true
                  },
                  x: {
                      stacked: false
                  }
              },
              barPercentage: 0.5,
          }
      });
  })
  .catch(error => console.error('Error fetching room status:', error));
